pipeline {
    agent any

    stages {
        stage('Checkout Source Code') {
            steps {
                // Checkout code from GitHub
                git url: 'https://github.com/your-repo.git', branch: 'main'
            }
        }

        stage('Static Code Analysis') {
            steps {
                // Run static code analysis (e.g., using flake8)
                script {
                    def qualityGatePassed = sh(script: 'flake8 .', returnStatus: true) == 0
                    if (!qualityGatePassed) {
                        error("Quality gate failed. Stopping the pipeline.")
                    }
                }
            }
        }

        stage('Provision Infrastructure') {
            steps {
                // Execute Terraform script to provision infrastructure
                dir('terraform') {
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Deployment & Load Balancing') {
            steps {
                // Deploy FastAPI application on EC2
                script {
                    // Assuming you have a deployment script ready
                    sh './deploy_fastapi.sh'

                    // Configure Elastic Load Balancer (ELB)
                    sh './configure_elb.sh'
                }
            }
        }
    }

    post {
        always {
            // Clean up or notify
            echo 'Pipeline completed.'
        }
    }
}
